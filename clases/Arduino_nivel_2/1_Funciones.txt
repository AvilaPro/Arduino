Funciones definidas por el ususario:
tipo nombreFunción (parámetros) {
   instrucciones;
}

int myFuncionMultiplicar(int x, int y){

int result;

result = x * y;
return result
}

Ejemplo de Blink usando funciones:

void setup() {
  Serial.begin(9600);
  pinMode(13, OUTPUT);
}
 
void loop() {
  enciendo();
  delay(1000);  
  apago();
  delay(1000);  
}
 
void enciendo() {
  Serial.println("Enciendo...");
  digitalWrite(13, HIGH);
}
 
void apago(){
  Serial.println("Apago...");
  digitalWrite(13, LOW);  
}

FUNCION DETECTA FLANCO

int detectaFlanco(int pin) {
  //Devuelve 1 flanco ascendente, -1 flanco descendente y 0 si no hay nada
  static boolean anterior_estado = digitalRead(pin);
  boolean estado = digitalRead(pin);
 
  if (anterior_estado != estado) {
    if (estado == HIGH) {
      anterior_estado = estado;
      return 1;
    }
    else {
      anterior_estado = estado;
      return -1;
    }
  }
  else {
    return 0;
  }
}


EJERCICIO DE DADO

#define PIN_BOTON_A 2
#define PIN_LED_1 4
#define PIN_LED_2 5 //PWM
#define PIN_LED_3 6 //PWM
#define PIN_LED_4 7

void setup() {
  //Inicializo puerto serie
  Serial.begin(9600);

  //Inicializo Pines
  Serial.println(F("Inicializando pines digitales..."));
  pinMode(PIN_BOTON_A, INPUT_PULLUP);
  pinMode(PIN_LED_1, OUTPUT);
  pinMode(PIN_LED_2, OUTPUT);
  pinMode(PIN_LED_3, OUTPUT);
  pinMode(PIN_LED_4, OUTPUT);

  randomSeed(analogRead(A5)); //genero una nueva semilla de un pin analógico al aire

}

void loop() {
  if (detectaFlanco(PIN_BOTON_A) == -1) {

    byte randNumber = random(PIN_LED_1, PIN_LED_4+1);
    Serial.println(randNumber);
    iluminaLed(randNumber);
  }
  delay(50); //evitar rebotes
}

int detectaFlanco(int pin) {
  //Devuelve 1 flanco ascendente, -1 flanco descendente y 0 si no hay nada
  static boolean anterior_estado = digitalRead(pin);
  boolean estado = digitalRead(pin);

  if (anterior_estado != estado) {
    if (estado == HIGH) {
      anterior_estado = estado;
      return 1;
    }
    else {
      anterior_estado = estado;
      return -1;
    }
  }
  else {
    anterior_estado = estado;
    return 0;
  }
}

void iluminaLed(int pin_led) {
  for (int i = PIN_LED_1; i <= PIN_LED_4; i++) {
    digitalWrite(i, HIGH);
    delay(100);
    digitalWrite(i, LOW);
    delay(100);
  }
  for (int i = PIN_LED_4; i >= PIN_LED_1; i--) {
    digitalWrite(i, HIGH);
    delay(100);
    digitalWrite(i, LOW);
    delay(100);
  }
  digitalWrite(pin_led, HIGH);
  Serial.println("Enciendo pin: " + (String)pin_led);
}



Práctica Final de Funciones

Con todo lo visto de Strings, operadores, estructuras de control y funciones, hacer un ejemplo de un menú interactivo donde se dan varias opciones y pulsando cada una de ellas se ejecuta una acción concreta. Si el valor pulsado no es ninguna de las opciones avisar y volver a mostrar el menú hasta que se pulse una opción correcta.

Opciones:

1 – Encender Led pin 13
2 – Apagar Ler pin 13
3 – Contar segundos hasta pulsar tecla y mostrar por pantalla
4 – Fin de programa

/*
  Estructuras de Control
  Menu interactivo
*/

void setup() {
  Serial.begin(9600);
  pinMode(13, OUTPUT);
  String titulo = "Menu Interactivo con Arduino";
  for (int i = 0; i < titulo.length(); i++) {
    Serial.print("-");
  }
  Serial.print("\n" + titulo + "\n");
  for (int i = 0; i < titulo.length(); i++) {
    Serial.print("-");
  }
  Serial.println();
}

void loop() {
  int respuesta;
  do {
    respuesta = menu();
    switch (respuesta) {
      case 1:
        Serial.println("-------> Led encendido");
        digitalWrite(13, HIGH);
        break;
      case 2:
        Serial.println("-------> Led apagado");
        digitalWrite(13, LOW);
        break;
      case 3:
        segundos();
        break;
      case 4:
        Serial.println("-------> Adios...");
        while (true) {
          //se queda aqui el programa
        }
        break;
      default:
        Serial.println("Opcion de menu incorrecta!!!!!");
        break;
    }
    //limpia_terminal();
  } while ((respuesta < 1) || (respuesta > 4));
}

int menu() {
  String leido = "";

  Serial.println("Elige opcion a ejecutar:");
  Serial.println("1 - Encender Led pin 13");
  Serial.println("2 - Apagar Led pin 13");
  Serial.println("3 - Contar segundos hasta pulsar tecla y mostrar por pantalla");
  Serial.println("4 - Fin");

  while (Serial.available() == 0) {
    //Ho hago nada
  }

  do {
    char caracter_leido;
    caracter_leido = Serial.read();
    leido += caracter_leido;
    delay(5);
  }  while (Serial.available() > 0);

  if (leido.toInt() != 0)
    return leido.toInt();
  else return 0;

}

void segundos() {
  int segundo = 0;

  while (Serial.available() == 0) {
    Serial.println("-------> Han pasado " + (String)segundo + " segundos");
    delay(1000);
    segundo++;
  }

  //Vacio buffer de lo enviado
  do {
    Serial.read();
    delay(5);
  }  while (Serial.available() > 0);
}

void limpia_terminal() {		//Solo v?lido para usar con putty
  Serial.write(27);       // ESC command
  Serial.print("[2J");    // clear screen command
  Serial.write(27);
  Serial.print("[H");     // cursor to home command
}